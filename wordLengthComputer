package wordlengthcomputer;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;
import java.util.concurrent.atomic.LongAdder;

/**
 *
 * @author Mike
 */
public class WordLengthComputer {

    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String[] args) throws IOException {
        ArrayList<String> fileList = new ArrayList<>();
        fileList.add("files.constitution.txt");
        fileList.add("files.haiku.txt");
        fileList.add("files.hamlet.txt");
        fileList.add("files.ladygaga.txt");
        fileList.add("files.mobydick.txt");
        fileList.add("files.myinput.txt");
        fileList.add("files.poem.txt");
        fileList.add("files.primes.txt");
        fileList.add("files.short.txt");
        fileList.add("files.tiny.txt");
        fileList.add("files.tomsawyer.txt");
        computeFiles(fileList);

    }

    public static void computeFiles(ArrayList<String> fileList) throws FileNotFoundException, IOException {
        for (int i = 0; i < fileList.size(); i++) {
            HashMap<Integer, LongAdder> counterMap = new HashMap<>();
            System.out.println("The name of the txt file is: " + fileList.get(i));
            Path filePath = Paths.get(fileList.get(i));
            Files.readAllLines(filePath)
                    .stream()
                    .map(text -> text.split("\\s+"))
                    .mapToInt(String::length)
                    .forEach(length -> {
                        if (!counterMap.containsKey(length)) {
                            counterMap.put(length, new LongAdder());
                        }
                        counterMap.get(length).increment();
                    });
            Set<Integer> keys = counterMap.keySet();
            Iterator<Integer> iterator = keys.iterator();
            while (!counterMap.isEmpty()) {
                Integer currentWordLength = iterator.next();
                System.out.println("word length: " + currentWordLength + " ==> " + counterMap.get(currentWordLength));
                counterMap.remove(currentWordLength);

            }
        }
    }

}
